const path = require('path');
const express = require('express');
const xss = require('xss');
const QuestionService = require('./question-service');
const { requireAuth } = require('../middleware/jwt-auth');

const questionRouter = express.Router();
const jsonBodyParser = express.json();

// questionRouter.use(requireAuth);

// id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
// author INTEGER REFERENCES users(id) NOT NULL,
// question_body TEXT NOT NULL, 
// department INTEGER REFERENCES departments(id) NOT NULL, 
// created_date TIMESTAMPTZ DEFAULT now() NOT NULL,
// answered BOOLEAN

const serializeQuestion = question => ({

    id: question.id,
    author: question.user_id,
    question_body: xss(question.question_body),
    department: question.department_id,
    created_date: question.created_date,
    answered: question.answered
})


questionRouter
    .route('/')
    .post(requireAuth, jsonBodyParser, (req, res, next) => {
        const { user_id, question_body, department_id } = req.body;
        const newQuestion = { author: user_id, question_body: question_body, department: department_id, answered: false }
        for (const [key, value] of Object.entries(newQuestion)) {
            if (value == null) {
                return res.status(400).json({ error: `Missing '${key}' in request body` });
            }
        }

        QuestionService.insertQuestion(req.app.get('db'), newQuestion)
            .then(question => {
                res
                    .status(201)
                    .location(path.posix.join(req.originalUrl + `/${question.id}`))
                    .json(serializeQuestion(newQuestion))
            })
            .catch(next)
    })

module.exports = questionRouter